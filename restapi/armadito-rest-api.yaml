# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'

# This is your document metadata
info:
  version: "0.0.0"
  title: Armadito REST API

host: localhost:8888
basePath: /api
produces:
  - application/json

# Describe your paths here
paths:

  /token:
    get:
      description: |
        Request an API token
      produces:
        - application/json
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Token'
        default:
          description: error
          schema:
            $ref: '#/definitions/Error'

  /ping:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Ping the server to get status
      # This is array of GET operation parameters:
      # Expected responses for this operation:
      produces:
        - application/json
      parameters:
        - in: header
          name: X-Armadito-Token
          description: session token
          required: true
          type: integer
          format: int64
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            $ref: '#/definitions/Pong'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /status:
    get:
      description:
        get the server status
      produces:
        - application/json
      parameters:
        - in: header
          name: X-Armadito-Token
          description: session token
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Status'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /scan:
    post:
      summary: launch a scan
      description: launch a scan
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: X-Armadito-Token
          description: session token
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: scan object
          required: true
          schema:
            $ref: "#/definitions/Scan"
      responses:
        200:
          description: OK
        405:
          description: Invalid input

  /event:
    get:
      description:
        get server event
      produces:
        - application/json
      parameters:
        - in: header
          name: X-Armadito-Token
          description: session token
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: event received OK
          schema:
            $ref: '#/definitions/Event'

definitions:

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string

  Token:
    type: object
    properties:
      token:
        type: integer
        format: int64
    
  Pong:
    type: object
    properties:
      status:
        type: string
        description: contains the server status
        enum: 
          - "ok"

  AntivirusStatus:
    type: object
    properties:
      version:
        type: string
        description: the version of the antivirus
      service:
        type: boolean
        description: is the service on or off?
      real-time-protection:
        type: boolean
        description: is the real-time protection on or off?

  ModuleStatus:
    type: object
    properties:
      name:
        type: string
        description: module name
      version:
        type: string
        description: module version
      update:
        type: string
        format: date-time
        description: module update date

  Status:
    type: object
    properties:
      antivirus:
        $ref: '#/definitions/AntivirusStatus'
      update:
        type: string
        format: date-time
        description: the last update date of the antivirus
      modules:
        type: array
        items:
          $ref: '#/definitions/ModuleStatus'
  Scan:
    type: object
    properties:
      path:
        type: string
        description: the path to scan
  
  Event:
    type: object
    discriminator: eventType
    required:
      - eventType # required for inheritance to work
    properties:
      eventType:
        type: string

  DetectionEvent:
    allOf:
      - $ref: '#/definitions/Event'
      - type: object
        properties:
          detection_time:
            type: string
            format: dateTime
            description: detection timestamp
          context:
            type: string
            enum:
              - "real-time"
              - "on-demand"
          path:
            type: string
            description: path
          scan_status:
            type: string
            enum: 
              - "undecided"
              - "clean"
              - "ignored"
              - "invalid argument"
              - "internal error"
              - "suspicious"
              - "white listed"
              - "malware"
              - "unknown status"
            description: scan status for path
          scan_action:
            type: string
            description: action taken for malware
          mod_name:
            type: string
            description: name of scan module that has detected the malware
          mod_report:
            type: string
            description: report of scan module that has detected the malware

  OnDemandProgressEvent:
    allOf:
      - $ref: '#/definitions/Event'
      - type: object
        properties:
          progress:
            type: integer
            format: int32
            description: the progress bar
          malware_count:
            type: integer
            format: int32
            description: malware counter
          suspicious_count:
            type: integer
            format: int32
            description: suspicious counter
          scanned_count:
            type: integer
            format: int32
            description: scanned file counter

  OnDemandCompletedEvent:
    allOf:
      - $ref: '#/definitions/Event'
      - type: object
        properties:
          start_time:
            type: string
            format: dateTime
            description: start time of the on-demand scan
          duration:
            type: string
            format: dateTime
            description: duration of the scan
          total_malware_count:
            type: integer
            format: int32
            description: malware counter
          total_suspicious_count:
            type: integer
            format: int32
            description: suspicious counter
          total_scanned_count:
            type: integer
            format: int32
            description: scanned file counter
          # array of detection event
          
